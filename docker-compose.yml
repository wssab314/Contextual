services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672","15672:15672"]
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics","-q","ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports: ["6379:6379"]

  adminer:
    image: adminer
    ports: ["8080:8080"]

  webhook:
    build: ./services/webhook
    env_file: .env
    depends_on:
      postgres: {condition: service_healthy}
      rabbitmq: {condition: service_healthy}
    ports: ["${WEBHOOK_PORT}:8000"]

  core:
    build: ./services/core
    env_file: .env
    depends_on:
      rabbitmq: {condition: service_healthy}
      postgres: {condition: service_healthy}
    ports: ["${CORE_PORT}:8000"]

  callback:
    build: ./services/callback
    env_file: .env
    depends_on:
      postgres: {condition: service_healthy}
    ports: ["${CALLBACK_PORT}:8000"]

volumes:
  pgdata:
